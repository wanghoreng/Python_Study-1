# 11047번 - 동전 0 문제 

# 문제요약
'''
가지고 있는 동전의 종류 N 
동전을 적절히 사용해서 그 가치의 합을 K 로 만들려고 한다. 
이 때 필요한 동전 개수의 최소값. 
'''

# 문제 접근방식 
'''
주어진 K 가 4200 일 때 동전 종류가 1000,500,100 이라고 가정해보자 
이럴 때 4200 은 1000*4 + 100*2 로 총 6개의 동전으로 합을  만들 수 있다. 
여기서 만약 4200 을 500*8 + 100* 2 로 총 10개의 동전으로 합을 만들게 되어 최소값에 부합하지 않게 된다. 
이러한 방식을 봤을 때 나누어지는 가장 큰 수로 먼저 나누는 것이 최소값에 
도달할 수 있는 적절한 방식이라는 걸 확인할 수 있다. 
이것이 최적의 해를 보장하는 이유는 
동전의 가치 2번째 부터는 배수로 주어지기 때문이다. 

6360 원 = 5000*1 + 1000*1 + 100*3 + 50*1 + 10*1 = 8 
'''

import sys
N,K = map(int,sys.stdin.readline().rstrip().split())

# 동전 종류를 담을 리스트
coins = []
for _ in range(N) : 
  coin = int(sys.stdin.readline().rstrip())
  coins.append(coin)

count = 0

# 동전이 큰 순서대로 담긴 리스트를 뒤에서부터 찾기 
for i in range(1,N+1) :
  if(K >= coins[N-i]) :  # K보다는 작거나 같은 동전 중 가장 큰 동전부터 K 나누기 
    count += K //coins[N-i]  
    K %= coins[N-i]
print(count)

'''
입력받은 것을 바로 리스트에 넣는 코드를 줄이는 방법으로 
아래와 같이 사용가능하다. 
'''
coins = [int(sys.stdin.readline().rstrip()) for _ in range(N)] 
