# 15829번 

# 해시함수 문제 
'''
해시함수 : 임의의 길이의 입력을 받아서 고정된 길이의 출력을 내보내는 함수
- 대표적으로 자료의 저장과 탐색에 쓰임 

문제 a~z 까지 고유한 번호 1 ~ 26으로 부여해준다. 
입력받은 영어 소문자 알파벳을 번호로 바꾼 수열을 하나의 정수로 
치환하기 위해 모두 더한 후
유한한 범위를 갖기 위해 적당히 큰 수 M 으로 나눠준다.
하지만, 서로 다른 문자열이라도, 동일한 해시값을 가질 수 있는 해시충돌이
일어날 수 있기 때문에, 수열의 각 항마다 고유한 계수를 부여하면 되는데 
가장 대표적인 방법이 항의 번호에 해당하는 만큼 특정한 숫자 r를 거듭제곱해서 곱해준다음 더하는 것이다 
이 문제에서 지정해준 r, M 은 서로소인 숫자로 하는 것이 일반적이며 
r 을 26보다 큰 소수 31 
M 을 1234567891 (소수) 로 지정해준다. 
'''

import sys
N = int(input())
L = sys.stdin.readline() # 문자열 

# 1 ~26 (인덱스에 +1)
e = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']

# 각 항을 더해주는 변수 
sum = 0
# 고유한 번호를 더 고유하게 만들어주는 숫자 부여 
r = 31 

# r과 서로소인 M
M =  1234567891

# 각 하나의 문자열마다 고유한 번호로 바꾼 뒤, 더해주는 반복문 만들기
for i in range(len(L)) : 
  if(L[i] != '\n') :  # i 에 줄바꿈도 넘어가서 제외해주기 
    sum += (e.index(L[i])+1) * (r**i) # 고유한 번호 더해주기 

# 다 더한 것을 가장 큰 숫자 M으로 나눠주기 (정수로 출력)
print(sum%M)


# 다른 사람 풀이 

import sys
N = int(input())
L = sys.stdin.readline() 
sum = 0
for i in range(N) : 
  sum += (ord(L[i])-96)*(31**i) # a 가 ASCII 코드로 97 이어서 -96 으로 계산을 하는 게 더 간단하다. 
print(sum % 1234567891)


