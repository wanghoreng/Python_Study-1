# 11866 번 문제 

# 문제요약
'''
요세푸스 문제로 
1번 부터 N번까지 N명의 사람이 있으면, 
순서대로 K번째 사람을 제거하고, 원을 따라서 K번째 사람을 제거하는 방식으로 
0명이 될 때까지 제거한다. 이 때, 제거 된 순서를 요세푸스 순열 이라고 한다.
이 순열을 구하는 프로그램을 구현하자. 
'''

# 문제풀이방식 
'''
1~N 까지 배열을 만든뒤 입력받은 K 를 배열을 반복문 돌린 곳에서 
인덱스로 찾아서 제거한 것을 다른 배열에 담는 식으로 풀예정
'''


N,K = map(int,input().split())
# 1~N번까지 +1씩 늘어나는 배열 만들어주기
N = [x for x in range(1,N+1)] # [1, 2, 3, 4, 5, 6, 7]

index = 0 
rmv_lst = []
while len(N) != 0 : # 길이가 0이 될 때까지 반복
  index += (K-1) # K = 3 일 경우 인덱스는 0부터 시작이여서 인덱스로2번째인 숫자를 제거해야하기 때문. 
  index = index % len(N) # 배열의 길이를 넘어갔을 때, 다시 배열범위 내로 맞춰주기 위해서 나머지를 구하는 연산을 진행했다. 
  # ex) 2 % 7 = 2번째 인덱스, 8 % 7 = 1번째 인덱스 
  rmv_lst.append(str(N.pop(index))) # 제거한 숫자를 다른 배열에 담아주기 

# 출력 
# print("<%s>" % rmv_lst)  # <[3, 6, 2, 7, 5, 1, 4]> 
print("<%s>" %(", ".join((rmv_lst))))
# <3, 6, 2, 7, 5, 1, 4> 


# 알게 된 함수 join 함수 
'''
'구분자'.join(리스트) : 
리스트를 구분자 통해서 문자열로 합쳐지면서 나오는 함수이다. 
메서드가 호출된 문자열은 주어진 문자열 사이에 삽입된다. 
그리고 결과는 새 문자열로 반환된다. 
'''

# 추가적으로, 다른 사람 풀이를 보니, 큐를 이용해 푼 것도 있었다. 
# 이는 실기시험이 끝난뒤 정리할 예정이다. 
    
    