# 1929번 문제 

# M이상 N 이하의 소수 구하기 문제 

'''
소수는 어떤 수를 나눴을 때 1과 자기자신을 제외하고 
다른 수는 다 나머지가 존재한다. 
그렇다면 증가하는 숫자가 있고, 입력받은 숫자에 증가하는 숫자(2부터 자기자신-1)를 
나누는 조건식에서 나머지가 0일 때 더해진 값이 있다면 소수가 아니고, 
더해진 값이 0 이라면 소수인 것으로 판단할 수 있을 것이다.
'''

# 2부터 i 까지 검사해서 시간초과가 뜨는 문제
'''
for i in range(m,n+1) :
  error = 0
  if m > 1 : 
    for j in range(2,i) :  
      if i % j == 0 : 
        error += 1 
      elif error == 1 : 
        break
    if error == 0 : 
      print(i)
'''

# 블로그를 찾아보니, 2부터 i의 제곱근 까지만 검사하면 나머지는 
# 계산을 하지 않아도 되는 것을 알게됨. 

#print(4**2) # 16 -> 4의 2제곱을 한 계산 
#print(4**0.5) # 2.0 -> 4의 제곱근을 구한 계산, 즉 4에 루트 씌운 값


m,n = map(int,input().split())
for i in range(m,n+1) :
  if i == 1 :  # 1은 소수에서 제외
    continue 
  for j in range(2,int(i**0.5)+1) :  # i 의 제곱근한 것까지 계산해줘야해서 +1 을 한 것 
    if i % j == 0 :  
      break
  else : 
      print(i)

